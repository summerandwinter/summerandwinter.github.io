function text2html(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\n/g,"<br>")}function handleError(e){var t=text2html(e);"WebGL not supported"==t&&(t='Your browser does not support WebGL.<br>Please see    <a href="http://www.khronos.org/webgl/wiki/Getting_a_WebGL_Implementation">    Getting a WebGL Implementation</a>.');var a=document.getElementById("loading");a.innerHTML=t,a.style.zIndex=1}window.onerror=handleError;var water,cubemap,renderer,center,oldCenter,velocity,gravity,radius,gl=GL.create(),angleX=-25,angleY=-200.5,useSpherePhysics=!1,paused=!1;window.onload=function(){function e(){gl.canvas.width=window.innerWidth-300,gl.canvas.height=window.innerHeight,gl.viewport(0,0,gl.canvas.width,gl.canvas.height),gl.matrixMode(gl.PROJECTION),gl.loadIdentity(),gl.perspective(45,gl.canvas.width/gl.canvas.height,.01,100),gl.matrixMode(gl.MODELVIEW),g()}if(document.body.appendChild(gl.canvas),gl.clearColor(0,0,0,1),water=new Water,renderer=new Renderer,cubemap=new Cubemap({xneg:document.getElementById("xneg"),xpos:document.getElementById("xpos"),yneg:document.getElementById("ypos"),ypos:document.getElementById("ypos"),zneg:document.getElementById("zneg"),zpos:document.getElementById("zpos")}),!water.textureA.canDrawTo()||!water.textureB.canDrawTo())throw new Error("Rendering to floating-point textures is required but not supported");center=oldCenter=new GL.Vector(-.4,-.75,.2),velocity=new GL.Vector,gravity=new GL.Vector(0,-4,0),radius=.25;for(var t=0;t<20;t++)water.addDrop(2*Math.random()-1,2*Math.random()-1,.03,1&t?.01:-.01);document.getElementById("loading").innerHTML="",e();var i,d,a=window.requestAnimationFrame||window.webkitRequestAnimationFrame||function(e){setTimeout(e,0)},r=(new Date).getTime();a(function e(){var t=(new Date).getTime();paused||(function(e){if(!(1<e)){if(2*e,s==u)velocity=new GL.Vector;else if(useSpherePhysics){var t=Math.max(0,Math.min(1,(radius-center.y)/(2*radius)));velocity=(velocity=velocity.add(gravity.multiply(e-1.1*e*t))).subtract(velocity.unit().multiply(t*e*velocity.dot(velocity))),(center=center.add(velocity.multiply(e))).y<radius-1&&(center.y=radius-1,velocity.y=.7*Math.abs(velocity.y))}water.moveSphere(oldCenter,center,radius),oldCenter=center,water.stepSimulation(),water.stepSimulation(),water.updateNormals(),renderer.updateCaustics(water)}}((t-r)/1e3),g()),r=t,a(e)}),window.onresize=e;var l,c,s=-1,u=1;document.onmousedown=function(e){l=e.pageX,c=e.pageY;var t=new GL.Raytracer,a=t.getRayForPixel(e.pageX,e.pageY),r=t.eye.add(a.multiply(-t.eye.y/a.y)),n=GL.Raytracer.hitTestSphere(t.eye,a,center,radius);n?(s=u,i=n.hit,d=t.getRayForPixel(gl.canvas.width/2,gl.canvas.height/2).negative()):Math.abs(r.x)<1&&Math.abs(r.z)<1?(s=0,document.onmousemove(e)):s=2},document.onmouseup=function(e){s=-1},document.onmousemove=function(e){switch(s){case 0:var t=(r=new GL.Raytracer).getRayForPixel(e.pageX,e.pageY),a=r.eye.add(t.multiply(-r.eye.y/t.y));water.addDrop(a.x,a.z,.03,.01),paused&&(water.updateNormals(),renderer.updateCaustics(water));break;case u:t=(r=new GL.Raytracer).getRayForPixel(e.pageX,e.pageY);var r,n=-d.dot(r.eye.subtract(i))/d.dot(t),o=r.eye.add(t.multiply(n));(center=center.add(o.subtract(i))).x=Math.max(radius-1,Math.min(1-radius,center.x)),center.y=Math.max(radius-1,Math.min(10,center.y)),center.z=Math.max(radius-1,Math.min(1-radius,center.z)),i=o,paused&&renderer.updateCaustics(water);break;case 2:angleY-=e.pageX-l,angleX-=e.pageY-c,angleX=Math.max(-90,Math.min(90,angleX))}l=e.pageX,c=e.pageY,paused&&g()},document.onkeydown=function(e){e.which==" ".charCodeAt(0)?paused=!paused:e.which=="G".charCodeAt(0)?useSpherePhysics=!useSpherePhysics:e.which=="L".charCodeAt(0)&&paused&&g()};function g(){GL.keys.L&&(renderer.lightDir=GL.Vector.fromAngles((90-angleY)*Math.PI/180,-angleX*Math.PI/180),paused&&renderer.updateCaustics(water)),gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT),gl.loadIdentity(),gl.translate(0,0,-4),gl.rotate(-angleX,1,0,0),gl.rotate(-angleY,0,1,0),gl.translate(0,.5,0),gl.enable(gl.DEPTH_TEST),renderer.sphereCenter=center,renderer.sphereRadius=radius,renderer.renderCube(),renderer.renderWater(water,cubemap),renderer.renderSphere(),gl.disable(gl.DEPTH_TEST)}};